5강. Components and Props

리엑트에서 가장 중요한 부분 중 하나인 컴포넌트와 프롭스

Components(컴포넌트)
이전에 리엑트는 컴포넌트 기반의 구조라는 중요한 특징이 있다는 것을 배웠습니다. 
리엑트에서는 모든 페이지가 컴포넌트로 구성되어 있고 하나의 컴포넌트는 또 다른 여러 개의 컴포넌트의 조합으로 구성될 수 있습니다.(Component-Based) 
그리고 이러한 컴포넌트들을 마치 레고 블록을 조립하듯이 끼워 맞춰서 새로운 커포넌트를 만들 수 있는 것이죠.
에어비엔비 홈페이지처럼 우리가 React를 컴포넌트 기반이라고 부르는 것은 작은 컴포넌트들이 모여서 하나의 컴포넌트를 구성하고 또 이러한 컴포넌트들이
모여서 전체 페이지를 구성하기 때문입니다. 이렇게 하나의 컴포넌트를 반복적으로 사용함으로써 전체 코드의 양을 줄일 수 있어서 자연스레 개발 시간과 
유지보수 비용도 줄일 수 있습니다. 리엑트 컴포넌트는 개념적으로는 자바스크립트의 함수와 비슷합니다. 함수가 입력을 받아서 출력을 내뱉는 것처럼 리엑트 
컴포넌트도 입력을 받아서 정해진 출력을 내밷습니다. 그래서 리엑트 컴포넌트를 그냥 하나의 함수라고 생각하면 좀 더 쉽게 개념을 이해할 수 있습니다.
하지만 리엑트 컴포넌트의 입력과 출력은 일반적인 자바스크립트 함수와는 조금 다릅니다. 
리엑트 컴포넌트에서의 입력은 우리가 바로 뒤어서 배우게 될 props라는 것이고 출력은 우리가 앞에서 배운 리엑트 엘리멘트가 됩니다. 
결국 리엑트 컴포넌트가 해주는 역할은 어떠한 속성들을 입력으로 받아서 그에 맞는 리엑트 컴포넌트가 해주는 역할은 어ㄸ너한 속성들을 입력으로 받아서 
그에 맞는 리엑트 엘리멘트를 생성하여 리턴해주는 것입니다. 앞에서 리엑트 엘리멘트는 리엑트 앱을 구성하는 가장 작은 빌딩 블록들이라고 배웠습니다. 그리고 
자바스크립트 객체 형태로 존재하며 화면에 보이는 것을 기술한다는것도 확인하였다. 리엑트 컴포넌트는 만들고자 하는 대로 props, 즉 속성을 넣으면 해당 
속성에 맞춰 화면에 나타날 엘리멘트를 만들어 주는 것입니다. 마치 붕어빵처럼 붕어빵 가게에 가보면 붕어빵 기계에 붕어 모양의 틀이 여러개 있고 거기에 
반죽을 부어서 붕어빵을 만든다 이 과정은 리엑트 컴포넌트로부터 엘리멘트가 만들어지는 과정과 비슷합니다. 여기에서 리엑트 컴포넌트는 붕어빵 틀을 의미하고
각 붕어빵들은 리엑트 엘리멘트를 의미한다고 볼 수 있습니다. 이 과정은 객체 지향 개념에서 나오는 클래스와 인스턴스의 개념과 비슷합니다. 클래스라는 붕어빵
틀에서 인스턴스라는 실제 붕어빵이 만들어져서 나오기 떄문입니다. React의 컴포넌트는 객체 지향까지는 아니지만 비슷한 개념을 가지고 있다고 이해하면 된다. 
붕어빵 틀만 있으면 계속해서 붕어빵을 만들어낼 수 있는 것이죠. 컴포넌트의 개념에 대해서 배웠으니 다음으로 React 컴포넌트의 입력으로 들어가는 props에 
대해 정리해보겠습니다. 

리엑트 컴포넌트의 입력으로 들어가는 프롭스에 대해 알아보겠습니다. 
먼저 Props는 prop 뒤에 복수형을 나타내는 -S를 붙야서 prop이 여러개인 것을 의미합니다.
그럼 Prop은 무엇인가?  prop은 property라는 단어를 줄여서 쓴것입니다. property는 재산이라는 뜻도 있지만 속성, 특성이라는 뜻도 갖고 있는데 리엑트에서는 
속성이라는 뜻으로 사용됩니다. 그렇다면 무엇의 속성일까요? 바로 리엑트 컴포넌트의 속성입니다. 앞에서 리엑트 컴포넌트는 붕어빵 틀에 해당된다고 했는데
그렇다면 프롭스가 나타내는 것은 무엇일까? 프롭스는 붕어빵에 들어가는 재료를 의미한다고 볼 수 았다. 

props는 컴포넌트에 전달할 다양한 정보를 담고 있는 자바스크립트 객체입니다. 화면에 렌더링하고 싶을 떄 해당 데이터를 props에 넣어서 전달하는 것이죠 
화면에 렌더링하고 싶을 떄 해당 데이터를 props에 넣어서 전달하는 것이죠 


